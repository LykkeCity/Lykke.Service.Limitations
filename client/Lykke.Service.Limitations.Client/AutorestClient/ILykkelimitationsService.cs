// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.Limitations.Client.AutorestClient
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    public partial interface ILykkelimitationsService : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Checks service is alive
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IsAliveResponse>> IsAliveWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='postModel'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<LimitationCheckResult>> ApiLimitationsPostWithHttpMessagesAsync(LimitCheckRequestModel postModel = default(LimitCheckRequestModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='period'>
        /// Possible values include: 'Day', 'Month'
        /// </param>
        /// <param name='clientId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ClientData>> ApiLimitationsGetClientDataPostWithHttpMessagesAsync(LimitationPeriod period, string clientId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='clientId'>
        /// </param>
        /// <param name='operationId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiLimitationsRemoveClientOperationDeleteWithHttpMessagesAsync(string clientId = default(string), string operationId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='clientId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AccumulatedDepositsModel>> ApiLimitationsGetAccumulatedDepositsPostWithHttpMessagesAsync(string clientId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<SwiftTransferLimitation>>> ApiSwiftLimitationsGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='limitations'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiSwiftLimitationsPostWithHttpMessagesAsync(IList<SwiftTransferLimitation> limitations = default(IList<SwiftTransferLimitation>), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='asset'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<SwiftTransferLimitation>> ApiSwiftLimitationsByAssetGetWithHttpMessagesAsync(string asset, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='asset'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiSwiftLimitationsByAssetDeleteWithHttpMessagesAsync(string asset, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='clientId'>
        /// </param>
        /// <param name='tierId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiTiersSetTierToClientPostWithHttpMessagesAsync(string clientId = default(string), string tierId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='limitTotalCashInAllTime'>
        /// </param>
        /// <param name='limitTotalCashIn30Days'>
        /// </param>
        /// <param name='limitTotalCashIn24Hours'>
        /// </param>
        /// <param name='limitTotalCashOutAllTime'>
        /// </param>
        /// <param name='limitTotalCashOut30Days'>
        /// </param>
        /// <param name='limitTotalCashOut24Hours'>
        /// </param>
        /// <param name='limitCreditCardsCashInAllTime'>
        /// </param>
        /// <param name='limitCreditCardsCashIn30Days'>
        /// </param>
        /// <param name='limitCreditCardsCashIn24Hours'>
        /// </param>
        /// <param name='limitCreditCardsCashOutAllTime'>
        /// </param>
        /// <param name='limitCreditCardsCashOut30Days'>
        /// </param>
        /// <param name='limitCreditCardsCashOut24Hours'>
        /// </param>
        /// <param name='limitSwiftCashInAllTime'>
        /// </param>
        /// <param name='limitSwiftCashIn30Days'>
        /// </param>
        /// <param name='limitSwiftCashIn24Hours'>
        /// </param>
        /// <param name='limitSwiftCashOutAllTime'>
        /// </param>
        /// <param name='limitSwiftCashOut30Days'>
        /// </param>
        /// <param name='limitSwiftCashOut24Hours'>
        /// </param>
        /// <param name='limitCryptoCashInAllTime'>
        /// </param>
        /// <param name='limitCryptoCashIn30Days'>
        /// </param>
        /// <param name='limitCryptoCashIn24Hours'>
        /// </param>
        /// <param name='limitCryptoCashOutAllTime'>
        /// </param>
        /// <param name='limitCryptoCashOut30Days'>
        /// </param>
        /// <param name='limitCryptoCashOut24Hours'>
        /// </param>
        /// <param name='isDefault'>
        /// </param>
        /// <param name='id'>
        /// </param>
        /// <param name='shortName'>
        /// </param>
        /// <param name='longName'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiTiersSaveTierPostWithHttpMessagesAsync(long limitTotalCashInAllTime, long limitTotalCashIn30Days, long limitTotalCashIn24Hours, long limitTotalCashOutAllTime, long limitTotalCashOut30Days, long limitTotalCashOut24Hours, long limitCreditCardsCashInAllTime, long limitCreditCardsCashIn30Days, long limitCreditCardsCashIn24Hours, long limitCreditCardsCashOutAllTime, long limitCreditCardsCashOut30Days, long limitCreditCardsCashOut24Hours, long limitSwiftCashInAllTime, long limitSwiftCashIn30Days, long limitSwiftCashIn24Hours, long limitSwiftCashOutAllTime, long limitSwiftCashOut30Days, long limitSwiftCashOut24Hours, long limitCryptoCashInAllTime, long limitCryptoCashIn30Days, long limitCryptoCashIn24Hours, long limitCryptoCashOutAllTime, long limitCryptoCashOut30Days, long limitCryptoCashOut24Hours, bool isDefault, string id = default(string), string shortName = default(string), string longName = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiTiersLoadTiersPostWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='id'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiTiersLoadTierPostWithHttpMessagesAsync(string id = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
