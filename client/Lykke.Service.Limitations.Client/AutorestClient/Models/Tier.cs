// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.Limitations.Client.AutorestClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Tier
    {
        /// <summary>
        /// Initializes a new instance of the Tier class.
        /// </summary>
        public Tier()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Tier class.
        /// </summary>
        public Tier(string id, string shortName, string longName, long limitTotalCashInAllTime, long limitTotalCashIn30Days, long limitTotalCashIn24Hours, long limitTotalCashOutAllTime, long limitTotalCashOut30Days, long limitTotalCashOut24Hours, long limitCreditCardsCashInAllTime, long limitCreditCardsCashIn30Days, long limitCreditCardsCashIn24Hours, long limitCreditCardsCashOutAllTime, long limitCreditCardsCashOut30Days, long limitCreditCardsCashOut24Hours, long limitSwiftCashInAllTime, long limitSwiftCashIn30Days, long limitSwiftCashIn24Hours, long limitSwiftCashOutAllTime, long limitSwiftCashOut30Days, long limitSwiftCashOut24Hours, long limitCryptoCashInAllTime, long limitCryptoCashIn30Days, long limitCryptoCashIn24Hours, long limitCryptoCashOutAllTime, long limitCryptoCashOut30Days, long limitCryptoCashOut24Hours, bool isDefault)
        {
            Id = id;
            ShortName = shortName;
            LongName = longName;
            LimitTotalCashInAllTime = limitTotalCashInAllTime;
            LimitTotalCashIn30Days = limitTotalCashIn30Days;
            LimitTotalCashIn24Hours = limitTotalCashIn24Hours;
            LimitTotalCashOutAllTime = limitTotalCashOutAllTime;
            LimitTotalCashOut30Days = limitTotalCashOut30Days;
            LimitTotalCashOut24Hours = limitTotalCashOut24Hours;
            LimitCreditCardsCashInAllTime = limitCreditCardsCashInAllTime;
            LimitCreditCardsCashIn30Days = limitCreditCardsCashIn30Days;
            LimitCreditCardsCashIn24Hours = limitCreditCardsCashIn24Hours;
            LimitCreditCardsCashOutAllTime = limitCreditCardsCashOutAllTime;
            LimitCreditCardsCashOut30Days = limitCreditCardsCashOut30Days;
            LimitCreditCardsCashOut24Hours = limitCreditCardsCashOut24Hours;
            LimitSwiftCashInAllTime = limitSwiftCashInAllTime;
            LimitSwiftCashIn30Days = limitSwiftCashIn30Days;
            LimitSwiftCashIn24Hours = limitSwiftCashIn24Hours;
            LimitSwiftCashOutAllTime = limitSwiftCashOutAllTime;
            LimitSwiftCashOut30Days = limitSwiftCashOut30Days;
            LimitSwiftCashOut24Hours = limitSwiftCashOut24Hours;
            LimitCryptoCashInAllTime = limitCryptoCashInAllTime;
            LimitCryptoCashIn30Days = limitCryptoCashIn30Days;
            LimitCryptoCashIn24Hours = limitCryptoCashIn24Hours;
            LimitCryptoCashOutAllTime = limitCryptoCashOutAllTime;
            LimitCryptoCashOut30Days = limitCryptoCashOut30Days;
            LimitCryptoCashOut24Hours = limitCryptoCashOut24Hours;
            IsDefault = isDefault;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ShortName")]
        public string ShortName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LongName")]
        public string LongName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitTotalCashInAllTime")]
        public long LimitTotalCashInAllTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitTotalCashIn30Days")]
        public long LimitTotalCashIn30Days { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitTotalCashIn24Hours")]
        public long LimitTotalCashIn24Hours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitTotalCashOutAllTime")]
        public long LimitTotalCashOutAllTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitTotalCashOut30Days")]
        public long LimitTotalCashOut30Days { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitTotalCashOut24Hours")]
        public long LimitTotalCashOut24Hours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCreditCardsCashInAllTime")]
        public long LimitCreditCardsCashInAllTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCreditCardsCashIn30Days")]
        public long LimitCreditCardsCashIn30Days { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCreditCardsCashIn24Hours")]
        public long LimitCreditCardsCashIn24Hours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCreditCardsCashOutAllTime")]
        public long LimitCreditCardsCashOutAllTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCreditCardsCashOut30Days")]
        public long LimitCreditCardsCashOut30Days { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCreditCardsCashOut24Hours")]
        public long LimitCreditCardsCashOut24Hours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitSwiftCashInAllTime")]
        public long LimitSwiftCashInAllTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitSwiftCashIn30Days")]
        public long LimitSwiftCashIn30Days { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitSwiftCashIn24Hours")]
        public long LimitSwiftCashIn24Hours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitSwiftCashOutAllTime")]
        public long LimitSwiftCashOutAllTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitSwiftCashOut30Days")]
        public long LimitSwiftCashOut30Days { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitSwiftCashOut24Hours")]
        public long LimitSwiftCashOut24Hours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCryptoCashInAllTime")]
        public long LimitCryptoCashInAllTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCryptoCashIn30Days")]
        public long LimitCryptoCashIn30Days { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCryptoCashIn24Hours")]
        public long LimitCryptoCashIn24Hours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCryptoCashOutAllTime")]
        public long LimitCryptoCashOutAllTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCryptoCashOut30Days")]
        public long LimitCryptoCashOut30Days { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LimitCryptoCashOut24Hours")]
        public long LimitCryptoCashOut24Hours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsDefault")]
        public bool IsDefault { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (ShortName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ShortName");
            }
            if (LongName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LongName");
            }
        }
    }
}
